# Django settings for backend project.

# Generated by 'django-admin startproject' using Django 5.2.1.

# For more information on this file, see
# https://docs.djangoproject.com/en/5.2/topics/settings/

# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/5.2/ref/settings/

from pathlib import Path
import os # Import os module at the top

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-16ueqsldqr!@02v-6##7pf_d=s9a=*o84285u@7!_y!blwnwhf'

# SECURITY WARNING: don't run with debug turned on in production!
# IMPORTANT: Set to False for testing production setup
DEBUG = True # CHANGED: Set to False for production simulation

# When DEBUG is False, you MUST specify ALLOWED_HOSTS.
# For local testing, '127.0.0.1' and 'localhost' are sufficient.
# In production, this will be your actual domain name(s).
ALLOWED_HOSTS = ['127.0.0.1','.vercel.app','.now.sh', 'localhost'] # CORRECTED: Required when DEBUG is False
#ALLOWED_HOSTS=[]

# Application definition
#CORS_ALLOWED_ORIGINS =['http://localhost:3000']
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'core',
    'rest_framework_simplejwt.token_blacklist',
    'django_filters',
    # ADDED: WhiteNoise to installed apps
    'whitenoise.runserver_nostatic', # Recommended for dev with WhiteNoise
    'whitenoise', # ADDED: WhiteNoise for production serving
]
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
    )
}
from datetime import timedelta
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
    'AUTH_HEADER_TYPES': ('Bearer',),
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # ADDED: WhiteNoise middleware. Must be after SecurityMiddleware.
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    # 'django.contrib.sessions.middleware.SessionMiddleware', # This is duplicated, remove one if not needed
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # CORRECTED: Point to your React build directory so Django can find index.html
       'DIRS': [os.path.join(BASE_DIR, 'templates')], # Corrected path
        #'DIRS': [os.path.join(BASE_DIR.parent, 'frontend/build')],

        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug', # ADDED: For 'debug' context in templates
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

#DATABASES = {
 #   'default':{
  #      'ENGINE' : 'django.db.backends.postgresql',
  #      'NAME': 'railway',
  #      'USER':'postgres',
  #      'PASSWORD' :'nLnKGbwGuuNAWpBnpIcyJOnIrtJgqJJx',
  #      'HOST':'maglev.proxy.rlwy.net',
  #      'PORT':'11100',
#
#    }
#}
DATABASES = {
    'default':{
        'ENGINE' : 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3'
    }
}
# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

# Your existing STATIC_URL. No change needed here.
STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
CORS_ALLOW_ALL_ORIGINS = True


# --- MODIFIED/ADDED STATIC & MEDIA FILE SETTINGS FOR WHITE NOISE ---

# This import was already present but ensure it's at the top.
# import os

# This STATIC_URL was duplicated. Keeping the one with the leading slash as standard.
# STATIC_URL = '/static/' # Already defined above.

# CORRECTED: Point STATICFILES_DIRS to your React build's 'static' folder.
# This tells Django (and WhiteNoise) where to find your compiled React CSS/JS.
#STATICFILES_DIRS = [
#    os.path.join(BASE_DIR.parent, 'frontend/build/static'), # Corrected path
    # You had os.path.join(BASE_DIR, 'static') here before. If you have other project-level
    # static files *outside* of any app, you might add them back here, but usually,
    # React build covers most frontend static needs.
#]
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    #os.path.join(BASE_DIR.parent, 'frontend/build/static'),
]

# This is the directory where `python manage.py collectstatic` will copy ALL static files.
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# ADDED: WhiteNoise storage backend for production optimizations (compression, caching)
STORAGES = {
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
    # ADDED: 'default' entry for media files, to fix InvalidStorageError
    "default": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
    },
}

# Media files (Uploaded by users like product images) - keep as is
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# --- END MODIFIED/ADDED STATIC & MEDIA FILE SETTINGS ---